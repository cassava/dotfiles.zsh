# ~/.zshrc is loaded after ~/.zshenv and /etc/zshrc
# vim: set ft=zsh fdm=marker:
#
# Add this line to enable profiling:
#
#   zmodload zsh/zprof
#

ZSH_USER_ZALIAS=~/.zalias
ZSH_USER_ZDIR=~/.zdir
ZSH_HOST_ZDIR=~/.zdir/+$(hostname)

PURE_PROMPT_SYMBOL='$'
if [[ "$TERM" == "alacritty" ]]; then
    PURE_PROMPT_SYMBOL='ï„…'
fi

# Functions {{{1

function source_zdir_files() {
    local glob="$1"

    if [[ -d "$ZSH_USER_ZDIR" ]]; then
        local globpath="$ZSH_USER_ZDIR/$glob"
        for file in $~globpath(N); do
            source "$file"
        done
    fi

    if [[ -d "$ZSH_HOST_ZDIR" ]]; then
        local globpath="$ZSH_HOST_ZDIR/$glob"
        for file in $~globpath(N); do
            source "$file"
        done
    fi
}

# Plugins {{{1
ZPLUG_HOME=~/.local/opt/zplug
ZPLUG_USE_CACHE=true
ZPLUG_CACHE_DIR=~/.cache/zplug
ZPLUG_INSTALL_NOW=false

if [[ ! -d $ZPLUG_HOME ]]; then
    mkdir -p $(dirname $ZPLUG_HOME)
    git clone https://github.com/zplug/zplug $ZPLUG_HOME
    ZPLUG_INSTALL_NOW=true
fi
source $ZPLUG_HOME/init.zsh

# zplug should manage itself
zplug 'zplug/zplug', hook-build:'zplug --self-manage'

# Theme
zplug 'mafredri/zsh-async'
zplug 'sindresorhus/pure', use:pure.zsh, as:theme
zstyle :prompt:pure:git:stash show yes

zplug 'Tarrasch/zsh-autoenv'
AUTOENV_FILE_ENTER=.autoenv.zsh
AUTOENV_FILE_LEAVE=.autoenv.zsh
AUTOENV_HANDLE_LEAVE=1

zplug 'djui/alias-tips'

zplug 'supercrabtree/k'

zplug 'wfxr/forgit'

zplug 'zsh-users/zsh-completions'
zplug 'zsh-users/zsh-autosuggestions'
zplug 'zsh-users/zsh-syntax-highlighting', defer:2

zplug 'zsh-users/zsh-history-substring-search'

source_zdir_files "$ZSH_USER_ZDIR" "*.zplug"

if [[ $ZPLUG_INSTALL_NOW == true ]]; then
    # Install plugins if there are plugins that have not been installed
    if ! zplug check --verbose; then
        printf "Install? [y/N]: "
        if read -q; then
            echo; zplug install
        fi
    fi
fi

# Then, source plugins and add commands to $PATH
zplug load
unset ZPLUG_INSTALL_NOW

# Options {{{1

# fix certain types of bugs occurring
unsetopt BG_NICE
# no c-s/c-q output freezing
setopt noflowcontrol
# allow expansion in prompts
setopt prompt_subst
# this is default, but set for share_history
setopt append_history
# save each command's beginning timestamp and the duration to the history file
setopt extended_history
# display PID when suspending processes as well
setopt longlistjobs
# try to avoid the 'zsh: no matches found...'
setopt nonomatch
# report the status of backgrounds jobs immediately
setopt notify
# whenever a command completion is attempted, make sure the entire command path
# is hashed first.
setopt hash_list_all
# not just at the end
setopt completeinword
# use zsh style word splitting
setopt noshwordsplit
# allow use of comments in interactive code
setopt interactivecomments
# in order to use #, ~ and ^ for filename generation grep word
# *~(*.gz|*.bz|*.bz2|*.zip|*.Z) -> searches for word not in compressed files
# don't forget to quote '^', '~' and '#'!
setopt noextended_glob
# don't error out when unset parameters are used
setopt unset
# don't ever correct spellin errors please
setopt nocorrect
# watch for everyone but me and root
watch=(notme root)
# automatically remove duplicates from these arrays
typeset -U path cdpath fpath manpath
# import new commands from the history file also in other zsh-session
setopt share_history
# If a new command line being added to the history list duplicates an older
# one, the older command is removed from the list
setopt histignorealldups
# remove command lines from the history list when the first character on the
# line is a space
setopt histignorespace

# Don't send SIGHUP to background processes when the shell exits.
setopt nohup
# avoid "beep"ing
setopt nobeep
# make cd push the old directory onto the directory stack.
#setopt auto_pushd
# don't push the same dir twice.
#setopt pushd_ignore_dups
# * shouldn't match dotfiles. ever.
setopt noglobdots
# Better umask
umask 022

# Environment {{{1
export HISTFILE="$HOME/.zhistory"
export HISTSIZE=10000
export SAVEHIST=10000
export EDITOR=vim
export PAGER=less
export MAIL="/var/mail/$USER"
#export REPORTTIME=60
export DIRSTACKSIZE=20
export DIRSTACKFILE=$HOME/.zdirstack

# Keybindings {{{1

# Emacs
bindkey -e

# Let me edit a command in my $EDITOR, as in bash:
autoload -z edit-command-line
zle -N edit-command-line
bindkey "^X^E" edit-command-line

bindkey '^[[A' history-substring-search-up
bindkey '^[[B' history-substring-search-down

# Completions {{{1
zstyle ':completion:*' use-cache true
autoload -U compinit
compinit -d ~/.zcompdump

# Sourcing External {{{1
[[ -f "$ZSH_USER_ZALIAS" ]] && source "$ZSH_USER_ZALIAS"
[[ -f ~/.dircolors ]] && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
[[ -f ~/.fzf.zsh ]] && source ~/.fzf.zsh
source_zdir_files "$ZSH_USER_ZDIR" "*.zsh"

# Clean up {{{1
unset source_zdir_files
